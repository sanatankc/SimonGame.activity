var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
/* global global */
export var assign = (function (source) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    for (var i = 0, len = args.length; i < len; i++) {
        var arg = args[i];
        for (var p in arg) {
            source[p] = arg[p];
        }
    }
    return source;
});
export var create = Object.create || (function (source) {
    if (source === void 0) { source = {}; }
    return (__assign({}, source));
});
export var root = typeof window !== 'undefined'
    ? window
    : typeof global !== 'undefined' ? global : this;
export var requestAnimationFrame = root.requestAnimationFrame ||
    (function (fn) { return root.setTimeout(fn, 16); });
export var cancelAnimationFrame = root.cancelAnimationFrame ||
    (function (id) { return root.clearTimeout(id); });
